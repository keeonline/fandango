name: Decommission VTAS environments

on: workflow_dispatch

permissions:
  id-token: write
  contents: read

jobs:
  retrieve-vtas-ip:
    name: Retrieve VTAS host IP address
    runs-on: ubuntu-latest
    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
    outputs:
      vtas_ip_addr: ${{ steps.vtas.outputs.vtas_ip_addr }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Initialise infrastructure plan
        working-directory: ./terraform/vtas
        run: terraform init
      - name: Run infrastructure plan
        working-directory: ./terraform/vtas
        run: terraform plan
      - name: Set vtas host address variable
        id: vtas
        working-directory: ./terraform/vtas
        run: |
          TEMP=$(terraform output vtas_host_ip_addr)
          VTAS_HOST_IP_ADDR=$(echo $TEMP | tr -d '"')
          # echo "::set-output name=vtas_ip_addr::${VTAS_HOST_IP_ADDR}"
          echo "vtas_ip_addr=${VTAS_HOST_IP_ADDR}" >> $GITHUB_OUTPUT  
          echo vtas_ip_addr=${VTAS_HOST_IP_ADDR}
    
  decommision-vtas-environments:
    name: Decommission environments
    needs: [retrieve-vtas-ip]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup Ansible on GHR
        run: |
          sudo apt update
          sudo apt install software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible
      - name: 'Remove VTAS environments'
        working-directory: ./ansible
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.DEMO_CLIENT_ID }}
          VTAS_HOST: ${{needs.retrieve-vtas-ip.outputs.vtas_ip_addr}}
        run: |
          echo [linux] >> hosts
          echo vtas ansible_host=${VTAS_HOST} >> hosts
          echo "" >> hosts
          cat hosts
          ansible-playbook -i hosts -v vtas-down.yml
