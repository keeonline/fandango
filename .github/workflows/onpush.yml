name: Fandango SIT (on push)

on: workflow_dispatch
# on: push

permissions:
  id-token: write
  contents: read

jobs:

  build-fandango:
    name: Build and publish Fandango
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup java on GHR
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'
          
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.0
        
      - name: Run the Gradle package task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/fandango:latest
         
  deploy-vtas-environment:
    name: Deploy VTAS environment
    needs: [build-fandango]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        run: echo This is deploy-vtas-environment

  provision-fandango-infrastructure:
    name: Provision Fandango infrastructure
    needs: [build-fandango]
    runs-on: ubuntu-latest
    environment: DEMO
    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_ACCESS_KEY: ${{ secrets.ACCESS_KEY }}

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2

      - name: Initialise infrastructure plan
        working-directory: ./terraform/app
        run: terraform init

      - name: Apply infrastructure plan
        working-directory: ./terraform/app
        run: terraform apply --auto-approve
  
  deploy-fandango:
    name: Deploy Fandango instance
    needs: [provision-fandango-infrastructure]
    runs-on: ubuntu-latest
    environment: DEMO

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup Ansible on GHR
        run: |
          sudo apt update
          sudo apt install software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible
          # sudo ansible-galaxy collection install azure.azcollection --force
          # sudo pip3 install -r /root/.ansible/collections/ansible_collections/azure/azcollection/requirements-azure.txt

      - name: Setup Azure CLI on GHR
        run: |
          sudo apt-get update
          sudo apt-get install ca-certificates curl apt-transport-https lsb-release gnupg
          sudo mkdir -p /etc/apt/keyrings
          curl -sLS https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor | sudo tee /etc/apt/keyrings/microsoft.gpg > /dev/null
          sudo chmod go+r /etc/apt/keyrings/microsoft.gpg
          AZ_DIST=$(lsb_release -cs)
          echo "deb [arch=`dpkg --print-architecture` signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/azure-cli/ $AZ_DIST main" | sudo tee /etc/apt/sources.list.d/azure-cli.list
          sudo apt-get update
          sudo apt-get install azure-cli
          
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
            client-id: ${{ secrets.DEMO_CLIENT_ID }}
            tenant-id: ${{ secrets.TENANT_ID }}
            subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
                                            
      - name: 'Create hosts file'
        run: |
          echo [linux] >> hosts
          echo application ansible_host=$(az vm show -d -g keeonline-rg -n keeonline-app-vm --query publicIps -o tsv) >> hosts
          echo vtas ansible_host=$(az vm show -d -g keeonline-rg -n keeonline-vtas-vm --query publicIps -o tsv) >> hosts
          echo "" >> hosts
          cat hosts
                              
      - name: Run SIT execution
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.DEMO_CLIENT_ID }}
          working-directory: ./ansible
        run: ansible-playbook -i hosts -v fandango-up.yml

  execute-fandango-sit:
    name: Execute Fandango SIT
    needs: [deploy-vtas-environment,deploy-fandango]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        run: echo execute-fandango-sit
      
          





      # - name: Start fandango environment
      #   run: docker-compose up -d

      # - name: Execute SIT
      #   run: |
      #     sleep 30 \
      #     && curl -X POST "http://localhost:8080/fandango/mcbn/ebcdic/requests" -H "accept: */*" -H "Content-Type: fandango/json" -d "{ \"payload\": \"F0F1F0F0763B440108C0A002F0F6F1F2F3F4F5F6F0F0F1F1F2F2F0F0F0F0F0F0F0F0F4F5F9F9F0F0F0F0F0F0F0F0F6F5F9F9F0F9F2F5F1F3F0F1F2F2F5F4F3F2F1F0F1F3F0F1F2F2F0F9F0F7F0F9F0F8F0F9F0F9F5F9F8F1F0F1F0F0F6F8F1F8F1F8F1F0F9F0F7F0F0F0F1F2F3F4F5C1C2C3C4C5C6C7C8C1C2C3C4C5C6C7C8F0F1F2F3F4F5F6F0F3F6F8F2F6F0F1F2D4C3C3F1F2F3F4F5F6F7F8F9\"}"

      # - name: Stop fandango environment
      #   run: docker-compose down    