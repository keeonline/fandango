name: Fandango SIT (on push)

on: workflow_dispatch
# on: push

permissions:
  id-token: write
  contents: read

jobs:
  build-fandango:
    name: Build and publish Fandango
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup java on GHR
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'          
      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1.0.0        
      - name: Run the Gradle package task
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/fandango:latest
         
  retrieve-vtas-ip:
    name: Retrieve VTAS host IP address
    runs-on: ubuntu-latest
    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
    outputs:
      vtas_ip_addr: ${{ steps.vtas.outputs.vtas_ip_addr }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Initialise infrastructure plan
        working-directory: ./terraform/vtas
        run: terraform init
      - name: Run infrastructure plan
        working-directory: ./terraform/vtas
        run: terraform plan
      - name: Set vtas host address variable
        id: vtas
        working-directory: ./terraform/vtas
        run: |
          TEMP=$(terraform output vtas_host_ip_addr)
          VTAS_HOST_IP_ADDR=$(echo $TEMP | tr -d '"')
          # echo "::set-output name=vtas_ip_addr::${VTAS_HOST_IP_ADDR}"
          echo "vtas_ip_addr=${VTAS_HOST_IP_ADDR}" >> $GITHUB_OUTPUT  
          echo vtas_ip_addr=${VTAS_HOST_IP_ADDR}

  deploy-vtas-environment:
    name: Deploy VTAS environments
    needs: [retrieve-vtas-ip]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup Ansible on GHR
        run: |
          sudo apt update
          sudo apt install software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible
      - name: Deploy the VTAS MCBN environment service
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.DEMO_CLIENT_ID }}
          VTAS_HOST: ${{needs.retrieve-vtas-ip.outputs.vtas_ip_addr}}
        working-directory: ./ansible
        run: |
          echo [linux] > hosts
          # echo vtas ansible_host=$(az vm show -d -g keeonline-rg -n keeonline-vtas-vm --query publicIps -o tsv) >> hosts
          echo vtas ansible_host=${VTAS_HOST} >> hosts
          echo "" >> hosts
          cat hosts
          ansible-playbook -i hosts -v vtas-up.yml 
    
  provision-fandango-infrastructure:
    name: Provision Fandango infrastructure
    runs-on: ubuntu-latest
    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
    outputs:
      app_ip_addr: ${{ steps.app.outputs.app_ip_addr }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
      - name: Initialise infrastructure plan
        working-directory: ./terraform/app
        run: terraform init
      - name: Apply infrastructure plan
        working-directory: ./terraform/app
        run: terraform apply --auto-approve
      - name: Set application host address variable
        id: app
        working-directory: ./terraform/app
        run: |
          TEMP=$(terraform output app_host_ip_addr)
          APP_HOST_IP_ADDR=$(echo $TEMP | tr -d '"')
          echo "app_ip_addr=${APP_HOST_IP_ADDR}" >> $GITHUB_OUTPUT  
          echo app_ip_addr=${APP_HOST_IP_ADDR}

  deploy-fandango:
    name: Deploy Fandango instance
    needs: [retrieve-vtas-ip,build-fandango,provision-fandango-infrastructure]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup Ansible on GHR
        run: |
          sudo apt update
          sudo apt install software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible
      - name: Start the Fandango service
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.DEMO_CLIENT_ID }}
          VTAS_HOST: ${{needs.retrieve-vtas-ip.outputs.vtas_ip_addr}}
          APP_HOST: ${{needs.provision-fandango-infrastructure.outputs.app_ip_addr}}
        working-directory: ./ansible
        run: |
          # VTAS_HOST=$(az vm show -d -g keeonline-rg -n keeonline-vtas-vm --query publicIps -o tsv)
          echo [linux] > hosts
          echo application ansible_host=${APP_HOST} >> hosts
          echo vtas ansible_host=${VTAS_HOST} >> hosts
          echo "" >> hosts
          cat hosts
          ansible-playbook -i hosts -v fandango-up.yml -e "fandango_up_mcbn_host=${VTAS_HOST} fandango_up_payments_baseurl=http://${VTAS_HOST}:12221" 
          # ansible-playbook -i hosts -v fandango-up.yml -e "fandango_up_mcbn_host=${VTAS_HOST} fandango_up_payments_baseurl=http://payments:80" 
                              
  execute-fandango-sit:
    name: Execute Fandango SIT
    needs: [retrieve-vtas-ip,provision-fandango-infrastructure,deploy-vtas-environment,deploy-fandango]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup Ansible on GHR
        run: |
          sudo apt update
          sudo apt install software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible
      - name: 'Create hosts file'
        working-directory: ./ansible
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.DEMO_CLIENT_ID }}
          VTAS_HOST: ${{needs.retrieve-vtas-ip.outputs.vtas_ip_addr}}
          APP_HOST: ${{needs.provision-fandango-infrastructure.outputs.app_ip_addr}}
        run: |
          echo [linux] > hosts
          echo application ansible_host=${APP_HOST} >> hosts
          echo vtas ansible_host=${VTAS_HOST} >> hosts
          echo "" >> hosts
          cat hosts                              
          ansible-playbook -i hosts -v fandango-sit.yml -e "fandango_sit_primer_app_host=${APP_HOST}"
      
  decommision-fandango-infrastructure:
    name: Decommission Fandango infrastructure
    if: always()
    needs: [execute-fandango-sit]
    runs-on: ubuntu-latest
    env:
      ARM_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.TENANT_ID }}
      ARM_CLIENT_ID: ${{ secrets.CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
      ARM_ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
      - name: Initialise infrastructure plan
        working-directory: ./terraform/app
        run: terraform init
      - name: Apply infrastructure plan
        working-directory: ./terraform/app
        run: terraform destroy --auto-approve
  
  decommision-vtas-environments:
    name: Decommission VTAS environments
    needs: [retrieve-vtas-ip,deploy-vtas-environment,execute-fandango-sit]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
      - name: Setup Ansible on GHR
        run: |
          sudo apt update
          sudo apt install software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible
      - name: 'Create hosts file'
        working-directory: ./ansible
        env:
          AZURE_SUBSCRIPTION_ID: ${{ secrets.SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.DEMO_CLIENT_ID }}
          VTAS_HOST: ${{needs.retrieve-vtas-ip.outputs.vtas_ip_addr}}
        run: |
          echo [linux] >> hosts
          echo vtas ansible_host=${VTAS_HOST} >> hosts
          echo "" >> hosts
          cat hosts
          ansible-playbook -i hosts -v vtas-down.yml
